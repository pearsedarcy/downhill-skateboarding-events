"""
Django settings for downhill_skateboarding_events project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import environ
from pathlib import Path
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialise environment variables
env = environ.Env()

# Take environment variables from .env file
environ.Env.read_env(BASE_DIR / ".env")

SECRET_KEY = env(
    "SECRET_KEY",
    default="django-insecure-56s_1r#qg48relbdfhbaab2u$n-h(s2%4pz^c=fn+^qzik*sgq",
)

DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=['*'])

# Application definition

INSTALLED_APPS = [
    # "unfold",  # Temporarily disabled
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.postgres",
    "allauth",
    "allauth.account",
    "events",
    "profiles",
    "tailwind",
    "theme",
    "django_browser_reload",
    "django_countries",
    "cloudinary",
    "cloudinary_storage",
    "search",
    "results",
    "crews",
]


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # Add this line
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]

SITE_ID = 1

ROOT_URLCONF = "downhill_skateboarding_events.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "downhill_skateboarding_events.context_processors.daisyui_themes_context",
            ],
        },
    },
]

WSGI_APPLICATION = "downhill_skateboarding_events.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Check for DATABASE_URL environment variable
db_url = env('DATABASE_URL', default=None)

# If no DATABASE_URL is provided, we check if we're in production mode
is_production = not DEBUG and not os.environ.get('DJANGO_DEVELOPMENT')

if db_url:
    # Use the explicitly provided DATABASE_URL
    DATABASES = {
        'default': dj_database_url.config(
            default=db_url,
            conn_max_age=600,
            conn_health_checks=True,
        )
    }
elif is_production:
    # In production with no explicit DATABASE_URL, use PROD_DATABASE_URL
    prod_db = env('PROD_DATABASE_URL', default=None)
    if prod_db:
        DATABASES = {
            'default': dj_database_url.config(
                default=prod_db,
                conn_max_age=600,
                conn_health_checks=True,
            )
        }
    else:
        # Fallback for production without proper DB URL (should raise error)
        raise Exception("Production database URL not configured")
else:
    # Development environment with no DATABASE_URL uses SQLite by default
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Tailwind Configuration
TAILWIND_APP_NAME = 'theme'
TAILWIND_CSS_PATH = 'css/dist/styles.css'
TAILWIND_DEV_MODE = DEBUG

# Remove NPM_BIN_PATH in production
if not DEBUG:
    NPM_BIN_PATH = None
else:
    NPM_BIN_PATH = "C:/Users/user/AppData/Roaming/npm/npm.cmd"

INTERNAL_IPS = [
    "127.0.0.1", "https://*.herokuapp.com",
]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# Allauth settings
# Allauth settings
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_LOGIN_ON_SIGNUP = True  # Automatically log in users after successful signup
ACCOUNT_ADAPTER = 'profiles.adapters.CustomAccountAdapter'
ACCOUNT_SIGNUP_REDIRECT_URL = "/profiles/"
ACCOUNT_LOGIN_REDIRECT_URL = "/profiles/"

# Custom signup form
ACCOUNT_FORMS = {
    'signup': 'profiles.signup_forms.EnhancedSignupForm',
}

# Email Configuration
EMAIL_BACKEND = env('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = env('EMAIL_HOST', default='localhost')
EMAIL_PORT = env.int('EMAIL_PORT', default=587)
EMAIL_USE_TLS = env.bool('EMAIL_USE_TLS', default=True)
EMAIL_HOST_USER = env('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD', default='')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='noreply@skatedownhills.com')
SERVER_EMAIL = env('SERVER_EMAIL', default='server@skatedownhills.com')

# Email notification settings
CREW_NOTIFICATIONS_ENABLED = env.bool('CREW_NOTIFICATIONS_ENABLED', default=True)
SEND_WELCOME_EMAIL = env.bool('SEND_WELCOME_EMAIL', default=True)

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "theme/static",
    BASE_DIR / "static",
]

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

CLOUDINARY_STORAGE = {
    "CLOUD_NAME": env("CLOUDINARY_CLOUD_NAME"),
    "API_KEY": env("CLOUDINARY_API_KEY"),
    "API_SECRET": env("CLOUDINARY_API_SECRET"),
}

DEFAULT_FILE_STORAGE = "cloudinary_storage.storage.MediaCloudinaryStorage"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Add these CSRF settings
CSRF_COOKIE_SECURE = not DEBUG  # Only send cookie over HTTPS in production
CSRF_COOKIE_HTTPONLY = False    # False allows JavaScript to access the cookie
CSRF_TRUSTED_ORIGINS = env.list('CSRF_TRUSTED_ORIGINS', default=[
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'https://*.herokuapp.com',
    'https://events.downhill-skateboarding.com'
    'https://www.skatedownhills.com'
    'https://skatedownhills.com',
])

CSRF_USE_SESSIONS = False       # Store CSRF token in cookie, not session
CSRF_COOKIE_SAMESITE = 'Lax'   # Allows CSRF cookie in same-site requests

# Production security settings
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True


# Google Maps API settings
GOOGLE_MAPS_API_KEY = os.environ.get('GOOGLE_MAPS_API_KEY')

GOOGLE_MAPS_API_SERVICES = [
    'directions',
    'maps',
    'places',
    'geometry',
    'geocoding',
]

# Add these settings at the end of the file
UNFOLD = {
    "SITE_TITLE": "Skatedownhills",
    "SITE_HEADER": "Skatedownhills",
    "SITE_URL": "/",
    "SITE_ICON": "/static/images/sdh-icon.webp",
    "DASHBOARD_CALLBACK": None,
    "COLORS": {
        "primary": {
            "50": "250 245 255",
            "100": "243 232 255",
            "200": "233 213 255",
            "300": "216 180 254",
            "400": "192 132 252",
            "500": "168 85 247",
            "600": "147 51 234",
            "700": "126 34 206",
            "800": "107 33 168",
            "900": "88 28 135",
            "950": "59 7 100",
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [],
    },
}
